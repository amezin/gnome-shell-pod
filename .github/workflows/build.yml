name: build

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "14 1 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: ghcr.io/${{ github.repository }}-fedora-34
            base_image: registry.fedoraproject.org/fedora:34
            dockerfile: fedora.dockerfile

          - image: ghcr.io/${{ github.repository }}-fedora-35
            extra_image: ghcr.io/${{ github.repository }}-build
            base_image: registry.fedoraproject.org/fedora:35
            dockerfile: fedora.dockerfile

          - image: ghcr.io/${{ github.repository }}-fedora-36
            base_image: registry.fedoraproject.org/fedora:36
            dockerfile: fedora.dockerfile

          - image: ghcr.io/${{ github.repository }}-debian-11
            base_image: debian:11
            dockerfile: debian.dockerfile

          - image: ghcr.io/${{ github.repository }}-ubuntu-20.04
            base_image: ubuntu:20.04
            dockerfile: debian.dockerfile

          - image: ghcr.io/${{ github.repository }}-ubuntu-21.10
            base_image: ubuntu:21.10
            dockerfile: debian.dockerfile

          - image: ghcr.io/${{ github.repository }}-ubuntu-22.04
            base_image: ubuntu:22.04
            dockerfile: debian.dockerfile
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ matrix.image }}
            ${{ matrix.extra_image }}

      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          build-args: |
            base_image=${{ matrix.base_image }}
          pull: true
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: |
            ${{ matrix.image }}:master
            ${{ steps.docker_meta.outputs.tags }}
          cache-to: type=inline
